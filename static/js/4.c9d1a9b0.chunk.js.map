{"version":3,"sources":["component/form/States.js","component/form/Department.js","component/form/Form.jsx","component/header/Header.js","pages/createEmployee/CreateEmployee.js"],"names":["states","name","abbreviation","departments","Form","_useState","useState","_useState2","Object","slicedToArray","firstName","setFirstName","_useState3","_useState4","lastName","setLastName","_useState5","Date","_useState6","dateOfBirth","setDateOfBirth","_useState7","_useState8","state","setState","_useState9","_useState10","street","setStreet","_useState11","_useState12","city","setCity","_useState13","_useState14","startDate","setStartDate","_useState15","_useState16","zipCode","setZipeCode","_useState17","_useState18","department","setDepartment","dispatch","useDispatch","_UseModal","UseModal","isShowing","toggle","values","format","_useForm","useForm","register","handleSubmit","_useForm$formState","formState","errors","isSubmitSuccessful","stateData","useSelector","employee","employees","console","log","localStorage","setItem","JSON","stringify","STATES","toConsumableArray","Set","map","value","label","DEPARTMENT","react_default","a","createElement","className","onSubmit","addEmployee","objectSpread","htmlFor","assign","required","minLength","type","placeholder","id","onChange","e","target","react_datepicker_min_default","selected","dateFormat","react_select_esm","options","isMulti","onClick","modal_react_npm","hide","title","Header","dist","to","CreateEmployee","header_Header","form_Form"],"mappings":"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","file":"static/js/4.c9d1a9b0.chunk.js","sourcesContent":["const states = [\r\n    {\r\n        \"name\": \"Alabama\",\r\n        \"abbreviation\": \"AL\"\r\n    },\r\n    {\r\n        \"name\": \"Alaska\",\r\n        \"abbreviation\": \"AK\"\r\n    },\r\n    {\r\n        \"name\": \"American Samoa\",\r\n        \"abbreviation\": \"AS\"\r\n    },\r\n    {\r\n        \"name\": \"Arizona\",\r\n        \"abbreviation\": \"AZ\"\r\n    },\r\n    {\r\n        \"name\": \"Arkansas\",\r\n        \"abbreviation\": \"AR\"\r\n    },\r\n    {\r\n        \"name\": \"California\",\r\n        \"abbreviation\": \"CA\"\r\n    },\r\n    {\r\n        \"name\": \"Colorado\",\r\n        \"abbreviation\": \"CO\"\r\n    },\r\n    {\r\n        \"name\": \"Connecticut\",\r\n        \"abbreviation\": \"CT\"\r\n    },\r\n    {\r\n        \"name\": \"Delaware\",\r\n        \"abbreviation\": \"DE\"\r\n    },\r\n    {\r\n        \"name\": \"District Of Columbia\",\r\n        \"abbreviation\": \"DC\"\r\n    },\r\n    {\r\n        \"name\": \"Federated States Of Micronesia\",\r\n        \"abbreviation\": \"FM\"\r\n    },\r\n    {\r\n        \"name\": \"Florida\",\r\n        \"abbreviation\": \"FL\"\r\n    },\r\n    {\r\n        \"name\": \"Georgia\",\r\n        \"abbreviation\": \"GA\"\r\n    },\r\n    {\r\n        \"name\": \"Guam\",\r\n        \"abbreviation\": \"GU\"\r\n    },\r\n    {\r\n        \"name\": \"Hawaii\",\r\n        \"abbreviation\": \"HI\"\r\n    },\r\n    {\r\n        \"name\": \"Idaho\",\r\n        \"abbreviation\": \"ID\"\r\n    },\r\n    {\r\n        \"name\": \"Illinois\",\r\n        \"abbreviation\": \"IL\"\r\n    },\r\n    {\r\n        \"name\": \"Indiana\",\r\n        \"abbreviation\": \"IN\"\r\n    },\r\n    {\r\n        \"name\": \"Iowa\",\r\n        \"abbreviation\": \"IA\"\r\n    },\r\n    {\r\n        \"name\": \"Kansas\",\r\n        \"abbreviation\": \"KS\"\r\n    },\r\n    {\r\n        \"name\": \"Kentucky\",\r\n        \"abbreviation\": \"KY\"\r\n    },\r\n    {\r\n        \"name\": \"Louisiana\",\r\n        \"abbreviation\": \"LA\"\r\n    },\r\n    {\r\n        \"name\": \"Maine\",\r\n        \"abbreviation\": \"ME\"\r\n    },\r\n    {\r\n        \"name\": \"Marshall Islands\",\r\n        \"abbreviation\": \"MH\"\r\n    },\r\n    {\r\n        \"name\": \"Maryland\",\r\n        \"abbreviation\": \"MD\"\r\n    },\r\n    {\r\n        \"name\": \"Massachusetts\",\r\n        \"abbreviation\": \"MA\"\r\n    },\r\n    {\r\n        \"name\": \"Michigan\",\r\n        \"abbreviation\": \"MI\"\r\n    },\r\n    {\r\n        \"name\": \"Minnesota\",\r\n        \"abbreviation\": \"MN\"\r\n    },\r\n    {\r\n        \"name\": \"Mississippi\",\r\n        \"abbreviation\": \"MS\"\r\n    },\r\n    {\r\n        \"name\": \"Missouri\",\r\n        \"abbreviation\": \"MO\"\r\n    },\r\n    {\r\n        \"name\": \"Montana\",\r\n        \"abbreviation\": \"MT\"\r\n    },\r\n    {\r\n        \"name\": \"Nebraska\",\r\n        \"abbreviation\": \"NE\"\r\n    },\r\n    {\r\n        \"name\": \"Nevada\",\r\n        \"abbreviation\": \"NV\"\r\n    },\r\n    {\r\n        \"name\": \"New Hampshire\",\r\n        \"abbreviation\": \"NH\"\r\n    },\r\n    {\r\n        \"name\": \"New Jersey\",\r\n        \"abbreviation\": \"NJ\"\r\n    },\r\n    {\r\n        \"name\": \"New Mexico\",\r\n        \"abbreviation\": \"NM\"\r\n    },\r\n    {\r\n        \"name\": \"New York\",\r\n        \"abbreviation\": \"NY\"\r\n    },\r\n    {\r\n        \"name\": \"North Carolina\",\r\n        \"abbreviation\": \"NC\"\r\n    },\r\n    {\r\n        \"name\": \"North Dakota\",\r\n        \"abbreviation\": \"ND\"\r\n    },\r\n    {\r\n        \"name\": \"Northern Mariana Islands\",\r\n        \"abbreviation\": \"MP\"\r\n    },\r\n    {\r\n        \"name\": \"Ohio\",\r\n        \"abbreviation\": \"OH\"\r\n    },\r\n    {\r\n        \"name\": \"Oklahoma\",\r\n        \"abbreviation\": \"OK\"\r\n    },\r\n    {\r\n        \"name\": \"Oregon\",\r\n        \"abbreviation\": \"OR\"\r\n    },\r\n    {\r\n        \"name\": \"Palau\",\r\n        \"abbreviation\": \"PW\"\r\n    },\r\n    {\r\n        \"name\": \"Pennsylvania\",\r\n        \"abbreviation\": \"PA\"\r\n    },\r\n    {\r\n        \"name\": \"Puerto Rico\",\r\n        \"abbreviation\": \"PR\"\r\n    },\r\n    {\r\n        \"name\": \"Rhode Island\",\r\n        \"abbreviation\": \"RI\"\r\n    },\r\n    {\r\n        \"name\": \"South Carolina\",\r\n        \"abbreviation\": \"SC\"\r\n    },\r\n    {\r\n        \"name\": \"South Dakota\",\r\n        \"abbreviation\": \"SD\"\r\n    },\r\n    {\r\n        \"name\": \"Tennessee\",\r\n        \"abbreviation\": \"TN\"\r\n    },\r\n    {\r\n        \"name\": \"Texas\",\r\n        \"abbreviation\": \"TX\"\r\n    },\r\n    {\r\n        \"name\": \"Utah\",\r\n        \"abbreviation\": \"UT\"\r\n    },\r\n    {\r\n        \"name\": \"Vermont\",\r\n        \"abbreviation\": \"VT\"\r\n    },\r\n    {\r\n        \"name\": \"Virgin Islands\",\r\n        \"abbreviation\": \"VI\"\r\n    },\r\n    {\r\n        \"name\": \"Virginia\",\r\n        \"abbreviation\": \"VA\"\r\n    },\r\n    {\r\n        \"name\": \"Washington\",\r\n        \"abbreviation\": \"WA\"\r\n    },\r\n    {\r\n        \"name\": \"West Virginia\",\r\n        \"abbreviation\": \"WV\"\r\n    },\r\n    {\r\n        \"name\": \"Wisconsin\",\r\n        \"abbreviation\": \"WI\"\r\n    },\r\n    {\r\n        \"name\": \"Wyoming\",\r\n        \"abbreviation\": \"WY\"\r\n    }\r\n];\r\n\r\nexport default states;"," const departments = [\r\n    { \"name\": \"Sales\" },\r\n    { \"name\": \"Marketing\" },\r\n    { \"name\": \"Engineering\" },\r\n    { \"name\": \"Human Resources\" },\r\n    { \"name\": \"Legal\" },\r\n]\r\n\r\nexport default departments;","import React from \"react\";\r\nimport states from \"./States\";\r\nimport Select from \"react-select\";\r\nimport departments from \"./Department\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./form.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addEmployee } from \"../../redux/reducer\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Modal, UseModal } from \"modal-react-npm\";\r\nimport { useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst Form = () => {\r\n  const [firstName, setFirstName] = useState(null);\r\n  const [lastName, setLastName] = useState(null);\r\n  const [dateOfBirth, setDateOfBirth] = useState(new Date());\r\n  const [state, setState] = useState(null);\r\n  const [street, setStreet] = useState(null);\r\n  const [city, setCity] = useState(null);\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [zipCode, setZipeCode] = useState(null);\r\n  const [department, setDepartment] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const { isShowing, toggle } = UseModal();\r\n\r\n  const values = {\r\n    firstName: firstName,\r\n    lastName,\r\n    dateOfBirth: format(dateOfBirth, \"dd/MM/yyyy\"),\r\n    state,\r\n    street,\r\n    startDate: format(startDate, \"dd/MM/yyyy\"),\r\n    city,\r\n    zipCode,\r\n    department,\r\n  };\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors, isSubmitSuccessful },\r\n  } = useForm();\r\n\r\n  const stateData = useSelector((state) => state.employee.employees);\r\n  console.log(stateData);\r\n  localStorage.setItem(\"employee\", JSON.stringify(stateData));\r\n\r\n  const onSubmit = () => {\r\n    dispatch(addEmployee({ ...values }));\r\n  };\r\n\r\n  const STATES = [\r\n    ...new Set(\r\n      states.map((state) => {\r\n        return { value: state.abbreviation, label: state.name };\r\n      })\r\n    ),\r\n  ];\r\n\r\n  const DEPARTMENT = [\r\n    ...new Set(\r\n      departments.map((department) => {\r\n        return { value: department.name, label: department.name };\r\n      })\r\n    ),\r\n  ];\r\n\r\n  return (\r\n    <section>\r\n      <h2>Create Employee</h2>\r\n      <div className=\"form-employee\">\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n          <div className=\"select-left\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"firstName\">First Name</label>\r\n              <input\r\n                {...register(\"firstName\", {\r\n                  required: true,\r\n                  minLength: {\r\n                    value: 4,\r\n                  },\r\n                })}\r\n                type=\"text\"\r\n                placeholder=\"First Name\"\r\n                id=\"name\"\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              />\r\n              {errors.firstName && (\r\n                <p className=\"errors\">This is required, Min length is 4</p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"lastName\">Last Name</label>\r\n              <input\r\n                {...register(\"lastName\", {\r\n                  required: true,\r\n                  minLength: {\r\n                    value: 4,\r\n                  },\r\n                })}\r\n                placeholder=\"Last Name\"\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              />\r\n              {errors.lastName && (\r\n                <p className=\"errors\">This is required, Min length is 4</p>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"dateOfBirth\">Date Of Birth</label>\r\n              <DatePicker\r\n                onChange={(value) => setDateOfBirth(value)}\r\n                selected={dateOfBirth}\r\n                dateFormat=\"dd/MMM/yyyy\"\r\n                required={true}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"startDate\">Start Date</label>\r\n              <DatePicker\r\n                onChange={(value) => setStartDate(value)}\r\n                selected={startDate}\r\n                dateFormat=\"dd/MMM/yyyy\"\r\n                required={true}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"street\">Street</label>\r\n              <input\r\n                {...register(\"street\", { required: true })}\r\n                type=\"text\"\r\n                name=\"street\"\r\n                onChange={(e) => setStreet(e.target.value)}\r\n                placeholder=\"Street\"\r\n              />\r\n              {errors.street && <p className=\"errors\">This is Required </p>}\r\n            </div>\r\n          </div>\r\n          <div className=\"select-rigth\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"city\">City</label>\r\n              <input\r\n                {...register(\"city\", { required: true })}\r\n                type=\"text\"\r\n                name=\"city\"\r\n                onChange={(e) => setCity(e.target.value)}\r\n                placeholder=\"Street\"\r\n              />\r\n              {errors.city && <p className=\"errors\">This is Required</p>}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"state\">State</label>\r\n              <Select\r\n                id=\"state\"\r\n                onChange={(e) => {\r\n                  setState(e.label);\r\n                }}\r\n                options={STATES}\r\n                placeholder=\"Select a state\"\r\n                className=\"select\"\r\n                isMulti={false}\r\n                required={true}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"zip-code\">Zip Code</label>\r\n              <input\r\n                id=\"zip-code\"\r\n                type=\"number\"\r\n                placeholder=\"Zip Code\"\r\n                name=\"zipCode\"\r\n                onChange={(e) => setZipeCode(e.target.value)}\r\n                required={true}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"department\">Department</label>\r\n              <Select\r\n                id=\"department\"\r\n                onChange={(e) => {\r\n                  setDepartment(e.label);\r\n                }}\r\n                options={DEPARTMENT}\r\n                placeholder=\" department\"\r\n                className=\"select\"\r\n                isMulti={false}\r\n                required={true}\r\n              />\r\n            </div>\r\n            <button className=\"save-modal\" onClick={toggle}>\r\n              Save\r\n            </button>\r\n            {isSubmitSuccessful && (\r\n              <Modal\r\n                isShowing={isShowing}\r\n                hide={toggle}\r\n                title=\"Employee Created !!\"\r\n              />\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header-employee\" >\r\n      <div className=\"title\">\r\n        <h1>HRnet</h1>\r\n      </div>\r\n      <div className=\"container\">\r\n        <Link className=\"path-employee\" to=\"/employees\">View Current Employees</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Form from \"../../component/form/Form\";\r\nimport Header from \"../../component/header/Header\";\r\n\r\nconst CreateEmployee = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <Header />\r\n      <Form />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateEmployee;\r\n"],"sourceRoot":""}